{"ast":null,"code":"var _jsxFileName = \"/Users/josehenriquedasilva/Downloads/Cursos/DIO/ChatGPT for Devs/Integrando o ChatGPT com Node e React/chatgpt-clone/web/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './styles/App.css';\nimport './styles/reset.css';\nimport { makeRequest } from './api/api';\nimport { SideMenu } from './components/SideMenu/SideMenu';\nimport { ChatMessage } from './components/ChatMessage/ChatMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [chatlog, setChatlog] = useState([{\n    user: \"gpt\",\n    message: \"como posso te ajudar hoje?\"\n  }]);\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let response = await makeRequest({\n      message: input\n    });\n    response = response.data.split('\\n').map(line => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: line\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 54\n    }, this));\n    setChatlog([...chatlog, {\n      user: 'me',\n      message: `${input}`\n    }, {\n      user: 'gpt',\n      message: response\n    }]);\n    setInput(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"chatbox\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-log\",\n        children: chatlog.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-holder\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            rows: \"1\",\n            className: \"chat-input-textarea\",\n            value: input,\n            onChange: e => setInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"guneKT5v9Qe90U27zZLiVgxQiK0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","makeRequest","SideMenu","ChatMessage","jsxDEV","_jsxDEV","App","_s","input","setInput","chatlog","setChatlog","user","message","handleSubmit","e","preventDefault","response","data","split","map","line","children","fileName","_jsxFileName","lineNumber","columnNumber","className","index","onSubmit","rows","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/josehenriquedasilva/Downloads/Cursos/DIO/ChatGPT for Devs/Integrando o ChatGPT com Node e React/chatgpt-clone/web/src/App.js"],"sourcesContent":["import {useState} from 'react'\n\nimport './styles/App.css';\nimport './styles/reset.css';\n\nimport { makeRequest } from './api/api';\nimport {SideMenu} from './components/SideMenu/SideMenu';\nimport { ChatMessage } from './components/ChatMessage/ChatMessage';\n\n\n\nfunction App() {\n  const [input, setInput ] = useState(\"\")\n  const [chatlog, setChatlog ] = useState([{\n    user: \"gpt\",\n    message: \"como posso te ajudar hoje?\"\n  }])\n\n  async function handleSubmit(e){\n    e.preventDefault()\n\n    let response = await makeRequest({message: input})\n\n    response = response.data.split('\\n').map(line => <p>{line}</p>)\n\n    setChatlog([...chatlog, {\n      user: 'me',\n      message: `${input}`\n    },\n    {\n      user: 'gpt',\n      message: response\n    }\n  ])\n\n  setInput(\"\")\n  }\n\n\n  return (\n    <div className=\"App\">\n      <SideMenu></SideMenu>\n      <section className='chatbox'>\n        <div className='chat-log'>\n          {chatlog.map((message, index) => (\n            <ChatMessage\n              key={index}\n              message={message}\n            />\n          ))}\n        </div>\n        <div className='chat-input-holder'>\n            <form onSubmit={handleSubmit}>\n              <input rows ='1'className='chat-input-textarea' value = {input} onChange={e => setInput(e.target.value)} />\n            </form>\n        </div>\n      </section>\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAE9B,OAAO,kBAAkB;AACzB,OAAO,oBAAoB;AAE3B,SAASC,WAAW,QAAQ,WAAW;AACvC,SAAQC,QAAQ,QAAO,gCAAgC;AACvD,SAASC,WAAW,QAAQ,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAInE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAE,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAE,GAAGX,QAAQ,CAAC,CAAC;IACvCY,IAAI,EAAE,KAAK;IACXC,OAAO,EAAE;EACX,CAAC,CAAC,CAAC;EAEH,eAAeC,YAAYA,CAACC,CAAC,EAAC;IAC5BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAIC,QAAQ,GAAG,MAAMhB,WAAW,CAAC;MAACY,OAAO,EAAEL;IAAK,CAAC,CAAC;IAElDS,QAAQ,GAAGA,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAACC,IAAI,iBAAIhB,OAAA;MAAAiB,QAAA,EAAID;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,CAAC;IAE/Df,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE;MACtBE,IAAI,EAAE,IAAI;MACVC,OAAO,EAAG,GAAEL,KAAM;IACpB,CAAC,EACD;MACEI,IAAI,EAAE,KAAK;MACXC,OAAO,EAAEI;IACX,CAAC,CACF,CAAC;IAEFR,QAAQ,CAAC,EAAE,CAAC;EACZ;EAGA,oBACEJ,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAL,QAAA,gBAClBjB,OAAA,CAACH,QAAQ;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eACrBrB,OAAA;MAASsB,SAAS,EAAC,SAAS;MAAAL,QAAA,gBAC1BjB,OAAA;QAAKsB,SAAS,EAAC,UAAU;QAAAL,QAAA,EACtBZ,OAAO,CAACU,GAAG,CAAC,CAACP,OAAO,EAAEe,KAAK,kBAC1BvB,OAAA,CAACF,WAAW;UAEVU,OAAO,EAAEA;QAAQ,GADZe,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEX,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNrB,OAAA;QAAKsB,SAAS,EAAC,mBAAmB;QAAAL,QAAA,eAC9BjB,OAAA;UAAMwB,QAAQ,EAAEf,YAAa;UAAAQ,QAAA,eAC3BjB,OAAA;YAAOyB,IAAI,EAAE,GAAG;YAAAH,SAAS,EAAC,qBAAqB;YAACI,KAAK,EAAIvB,KAAM;YAACwB,QAAQ,EAAEjB,CAAC,IAAIN,QAAQ,CAACM,CAAC,CAACkB,MAAM,CAACF,KAAK;UAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEP,CAAC;AAEV;AAACnB,EAAA,CAjDQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}